import React from 'react';
import Image from 'next/image';
import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';

import {
  useAccount,
  useContractRead,
  useContractWrite,
  usePrepareContractWrite,
  useWaitForTransaction,
} from 'wagmi';
import { abi } from '../contract-abi';
import FlipCard, { BackCard, FrontCard } from '../components/FlipCard';
import type {
  UsePrepareContractWriteConfig,
  UseContractReadConfig,
  UseContractWriteConfig,
} from 'wagmi';

const contractConfig = {
  address: '0x8aBd25fa3226533bAb1bcFDF7877576e703f0A0F',
  abi,
};

import Eventheader from "../components/eventheader"


const Home: NextPage = () => {

  const [mounted, setMounted] = React.useState(false);
  React.useEffect(() => setMounted(true), []);

  const [totalMinted, setTotalMinted] = React.useState(0);
  const { isConnected } = useAccount();

  const { config: contractWriteConfig } = usePrepareContractWrite({
    ...contractConfig,
    functionName: 'mint',
  } as UsePrepareContractWriteConfig);

  const {
    data: mintData,
    write: mint,
    isLoading: isMintLoading,
    isSuccess: isMintStarted,
    error: mintError,
  } = useContractWrite(contractWriteConfig as UseContractWriteConfig);

  const { data: totalSupplyData }: any = useContractRead({
    ...contractConfig,
    functionName: 'totalSupply',
    watch: true,
  } as UseContractReadConfig);

  const {
    data: txData,
    isSuccess: txSuccess,
    error: txError,
  } = useWaitForTransaction({
    hash: mintData?.hash,
  });

  React.useEffect(() => {
    if (totalSupplyData) {
      setTotalMinted(totalSupplyData.toNumber());
    }
  }, [totalSupplyData]);

  const isMinted = txSuccess;

  return (
    <div className={styles.container}>
      <Head>
        <title>ticketchain</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />

        <link rel="icon" href="/favicon2.png" />
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" />
      

      </Head>

      <header className={styles.header}>
      <div className="container">
          <span className={styles.logo}>ticketchain</span>
      </div>
      </header>
      
      

   
      
      

      <main className={styles.main}>
      
      <div><Eventheader/></div>
      
        

        <div>
        <FlipCard>
       
            <FrontCard isCardFlipped={isMinted}>
              <Image
                layout="responsive"
                src="/taylorswift.jpg"
                width="500"
                height="400"
                alt="Taylor Swift Ticket"
              />
          
             
            </FrontCard>
            <BackCard isCardFlipped={isMinted}>
              <div style={{ padding: 24 }}>
                <Image
                  src="/taylorswift.jpg"
                  width="80"
                  height="80"
                  alt="Taylor Swift Ticket"
                  style={{ borderRadius: 8 }}
                />
                <p style={{ marginBottom: 24 }}>
                  Ticket purchased! Your ticket will show up in your wallet in the next few minutes.
                </p>
                <p style={{ marginBottom: 6 }}>
                  View on{' '}
                  <a href={`https://sepolia.etherscan.io/tx/${mintData?.hash}`}>
                    Etherscan
                  </a>
                </p>
                <p>
                  View on{' '}
                  <a
                    href={`https://testnets.opensea.io/assets/sepolia/${txData?.to}/1`}
                  >
                    Opensea
                  </a>
                </p>
              </div>
            </BackCard>
          </FlipCard>
        </div>

        <div>Watch Taylor Swift Live @Maddison Square Gardens</div>
        <p></p>

        <div>

          


        <ConnectButton /> 

        {mintError && (
              <p style={{ marginTop: 24, color: '#FF6257' }}>
                Error: {mintError.message}
              </p>
            )}
            {txError && (
              <p style={{ marginTop: 24, color: '#FF6257' }}>
                Error: {txError.message}
              </p>
            )}

            {mounted && isConnected && !isMinted && (
              <button
                style={{ marginTop: 24 }}
                disabled={!mint || isMintLoading || isMintStarted}
                className="button"
                data-mint-loading={isMintLoading}
                data-mint-started={isMintStarted}
                onClick={() => mint?.()}
              >
                {isMintLoading && 'Waiting for approval'}
                {isMintStarted && 'Buying...'}
                {!isMintLoading && !isMintStarted && 'Buy for $59.99'}
              </button>
            )}
        </div>

       
        


        <div className={styles.grid}>

         

         

     

      
        </div>
      </main>

      <footer className={styles.footer}>
        <div><p>Made with ❤️ by ticketchain, © 2023, ltd. All rights reserved.</p>
        <p>     <a href="https://www.linkedin.com/in/mustafa-o-0b7a8aab/" target="_blank" rel="noopener noreferrer">
        <img src="/linkedintransparent2.png" alt="LinkedIn Icon" width="40" height="40" style={{ width: '40px', height: '40px !important' }} />

            
          </a></p></div>

     
      </footer>
    </div>
  );
};

export default Home;
